services:
  mongodb:
    image: mongo:7.0
    container_name: inventory-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: inventory_db
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:1.0.0
    container_name: inventory-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - inventory-network

  app:
    build: .
    container_name: inventory-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/inventory_db?authSource=admin
      PORT: 3000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - inventory-network
    command: npm run dev

  seeder:
    build: .
    container_name: inventory-seeder
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/inventory_db?authSource=admin
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - app
    networks:
      - inventory-network
    command: npm run seed
    restart: "no"

volumes:
  mongodb_data:

networks:
  inventory-network:
    driver: bridge
